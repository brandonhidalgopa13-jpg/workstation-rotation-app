# GitHub Actions workflow for REWS - Fixed secrets syntax
name: 🚀 REWS Build & Release

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

# Removed problematic GRADLE_OPTS that were causing ClassNotFoundException

jobs:
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔧 Make gradlew executable
      run: chmod +x ./gradlew
      
    - name: ☕ Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: 🤖 Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: 🔧 Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: wrapper
        
    - name: 🧪 Run unit tests
      uses: gradle/gradle-build-action@v2
      with:
        arguments: testDebugUnitTest --no-daemon
        
    - name: 🔍 Run lint
      uses: gradle/gradle-build-action@v2
      with:
        arguments: lintDebug --no-daemon
        
    - name: 📊 Generate test report
      uses: gradle/gradle-build-action@v2
      with:
        arguments: jacocoTestReport --no-daemon
      continue-on-error: true
      
    - name: 📤 Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: app/build/reports/
        if-no-files-found: warn

  build-debug:
    name: 🔨 Build Debug APK
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔧 Make gradlew executable
      run: chmod +x ./gradlew
      
    - name: ☕ Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: 🤖 Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: 🔨 Build debug APK
      uses: gradle/gradle-build-action@v2
      with:
        arguments: assembleDebug --no-daemon
      
    - name: 📤 Upload debug APK
      uses: actions/upload-artifact@v4
      with:
        name: REWS-debug-apk
        path: app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30

  build-release:
    name: 🚀 Build Release APK
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔧 Make gradlew executable
      run: chmod +x ./gradlew
      
    - name: ☕ Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: 🤖 Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: 🔧 Setup Gradle
      uses: gradle/gradle-build-action@v2
      
    - name: 🔑 Setup signing (if keystore available)
      run: |
        # Check if keystore secrets are available
        if [ -n "${{ secrets.KEYSTORE_BASE64 }}" ]; then
          echo "Setting up release signing..."
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > app/release.keystore
          echo "storeFile=release.keystore" >> keystore.properties
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" >> keystore.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> keystore.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> keystore.properties
        else
          echo "⚠️ Keystore secrets not configured, building unsigned APK"
        fi
      
    - name: 🚀 Build release APK
      uses: gradle/gradle-build-action@v2
      with:
        arguments: assembleRelease --no-daemon
      
    - name: 📝 Get version name
      id: version
      run: |
        VERSION=$(grep "versionName" app/build.gradle | awk '{print $2}' | tr -d '"')
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
    - name: 📤 Upload release APK
      uses: actions/upload-artifact@v4
      with:
        name: REWS-v${{ steps.version.outputs.version }}-release
        path: app/build/outputs/apk/release/app-release.apk
        retention-days: 90
        
    - name: 🏷️ Create GitHub Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/v')
      with:
        files: |
          app/build/outputs/apk/release/app-release.apk
        name: REWS ${{ steps.version.outputs.version }}
        body: |
          🚀 **REWS v${{ steps.version.outputs.version }}** - Sistema de Rotación y Estaciones de Trabajo
          
          ## 📱 Instalación
          1. Descarga el archivo `app-release.apk`
          2. Habilita "Fuentes desconocidas" en tu dispositivo Android
          3. Instala el APK
          
          ## ✨ Características Principales
          - 👑 Sistema de Liderazgo Avanzado
          - 📊 Reportes y Estadísticas Completas
          - ⚡ Optimización de Rendimiento
          - 🔔 Sistema de Notificaciones Inteligentes
          - ⚙️ Configuraciones Avanzadas
          - 🗄️ Gestión de Base de Datos
          
          ## 📋 Requisitos
          - Android 7.0 (API 24) o superior
          - 50 MB de espacio libre
          - 2 GB RAM recomendado
          
          ## 📚 Documentación
          - [Guía de Instalación](INSTALLATION_GUIDE.md)
          - [Notas de Release](RELEASE_NOTES_v${{ steps.version.outputs.version }}.md)
          - [Changelog](CHANGELOG.md)
          
          ---
          
          **Desarrollado por Brandon Josué Hidalgo Paz**
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔒 Run security scan
      uses: securecodewarrior/github-action-add-sarif@v1
      with:
        sarif-file: 'security-scan-results.sarif'
      continue-on-error: true
      
    - name: 📊 Upload security scan results
      uses: actions/upload-artifact@v4
      with:
        name: security-scan-results
        path: security-scan-results.sarif
      continue-on-error: true

  performance-test:
    name: ⚡ Performance Test
    runs-on: ubuntu-latest
    needs: build-debug
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔧 Make gradlew executable
      run: chmod +x ./gradlew
      
    - name: ☕ Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: 🤖 Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: ⚡ Run performance tests
      uses: gradle/gradle-build-action@v2
      with:
        arguments: testDebugUnitTest --tests="*PerformanceTest*" --no-daemon
      continue-on-error: true
      
    - name: 📊 Upload performance results
      uses: actions/upload-artifact@v4
      with:
        name: performance-test-results
        path: app/build/reports/
        if-no-files-found: warn
      continue-on-error: true